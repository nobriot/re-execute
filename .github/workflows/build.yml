name: Build

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build-linux:
    name: Build (Linux)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-git-

      - name: Install cargo-deny
        run: cargo install cargo-deny --locked

      - name: Run Clippy (lint)
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Format (rustfmt)
        run: cargo fmt --all -- --check --color always

      - name: cargo deny check
        run: cargo deny check

      - name: cargo test 
        run: cargo test

      - name: Build (cargo build --release)
        run: cargo build --release

  build-windows:
    name: Build (Windows)
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: C:\Users\runneradmin\.cargo\registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: C:\Users\runneradmin\.cargo\git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-git-

      - name: cargo test 
        run: cargo test

      - name: Build (cargo build --release)
        run: cargo build --release
